package airport;

import java.awt.EventQueue;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.Month;

public class Ticket extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JTextField nameField;
    private JComboBox<String> cityComboBox;
    private JComboBox<String> countryComboBox;
    private JRadioButton businessClassRadioButton;
    private JRadioButton economyClassRadioButton;
    private JSpinner dateSpinner;

    // Массивы данных
    private String[] cities = {"Минск", "Токио", "Астана"};
    private String[] countries = {"Беларусь", "Япония", "Казахстан"};
    private double[] economyPrices = {100, 200, 150}; // базовые цены для эконом-класса для каждого города
    private double[] businessPrices = {200, 400, 300}; // базовые цены для бизнес-класса для каждого города

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            try {
                Ticket frame = new Ticket();
                frame.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    public Ticket() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 600, 450);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
        contentPane.setLayout(null);

        // Поле для ввода имени
        JLabel nameLabel = new JLabel("Имя:");
        nameLabel.setBounds(10, 20, 80, 20);
        contentPane.add(nameLabel);

        nameField = new JTextField();
        nameField.setToolTipText("Введите ваше имя");
        nameField.setBounds(100, 20, 150, 20);
        contentPane.add(nameField);
        nameField.setColumns(10);

        // Выбор города
        JLabel cityLabel = new JLabel("Город:");
        cityLabel.setBounds(10, 60, 80, 20);
        contentPane.add(cityLabel);

        cityComboBox = new JComboBox<>(cities);
        cityComboBox.setBounds(100, 60, 150, 20);
        contentPane.add(cityComboBox);

        // Выбор страны
        JLabel countryLabel = new JLabel("Страна:");
        countryLabel.setBounds(10, 100, 80, 20);
        contentPane.add(countryLabel);

        countryComboBox = new JComboBox<>(countries);
        countryComboBox.setBounds(100, 100, 150, 20);
        contentPane.add(countryComboBox);

        // Выбор класса
        JLabel classLabel = new JLabel("Класс:");
        classLabel.setBounds(10, 140, 80, 20);
        contentPane.add(classLabel);

        businessClassRadioButton = new JRadioButton("Бизнес");
        businessClassRadioButton.setBounds(100, 140, 100, 20);
        contentPane.add(businessClassRadioButton);

        economyClassRadioButton = new JRadioButton("Эконом");
        economyClassRadioButton.setBounds(200, 140, 100, 20);
        contentPane.add(economyClassRadioButton);

        ButtonGroup classGroup = new ButtonGroup();
        classGroup.add(businessClassRadioButton);
        classGroup.add(economyClassRadioButton);

        // Выбор даты
        JLabel dateLabel = new JLabel("Дата полета:");
        dateLabel.setBounds(10, 180, 80, 20);
        contentPane.add(dateLabel);

        dateSpinner = new JSpinner(new SpinnerDateModel());
        JSpinner.DateEditor dateEditor = new JSpinner.DateEditor(dateSpinner, "dd/MM/yyyy");
        dateSpinner.setEditor(dateEditor);
        dateSpinner.setBounds(100, 180, 150, 20);
        contentPane.add(dateSpinner);

        // Кнопка для расчета стоимости
        JButton calculateButton = new JButton("Рассчитать");
        calculateButton.setBounds(100, 220, 150, 30);
        contentPane.add(calculateButton);

        // Обработчик нажатия на кнопку
        calculateButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                calculateTicketPrice();
            }
        });
    }

    // Метод расчета стоимости билета
    private void calculateTicketPrice() {
        String name = nameField.getText();
        int cityIndex = cityComboBox.getSelectedIndex();
        boolean isBusinessClass = businessClassRadioButton.isSelected();
        LocalDate date = ((java.util.Date) dateSpinner.getValue()).toInstant()
                .atZone(java.time.ZoneId.systemDefault()).toLocalDate();

        double price;

        // Получаем базовую цену в зависимости от выбранного класса
        if (isBusinessClass) {
            price = businessPrices[cityIndex]; // Цена для бизнес-класса
        } else {
            price = economyPrices[cityIndex]; // Цена для эконом-класса
        }

        // Проверка на сезон (лето)
        if (date.getMonth() == Month.JUNE || date.getMonth() == Month.JULY || date.getMonth() == Month.AUGUST) {
            price *= 1.1; // Летом дороже на 10%
        }

        // Вывод результата
        JOptionPane.showMessageDialog(this, "Здравствуйте, " + name + "! Стоимость вашего билета: " + price + " $");
    }
}
